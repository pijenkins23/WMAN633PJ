#install.packages("AICcmodavg")
library(AICcmodavg)
# loading data
dat <- read.csv("CompletedatawWQ.csv")
hr <- dat[c("Radio.Tag",'lat', 'lon')]
hr <- hr[!is.na(hr$lat) & !is.na(hr$lon),]
coordinates(hr) <- c('lat','lon')
# The sample data are lat long from WGS 84
proj4string(hr) <- CRS( "EPSG:4326" )
# converting to utm from lat lon
res <- spTransform(hr, CRS("+proj=utm +zone=17N ellps=WGS84"))
musky <- data.frame(
"Radio.Tag" = unique(dat$Radio.Tag))
head(musky)
# using MCP instead of KDE
# MCP
musky.mcp <- mcp(res, percent = 95)
#Calculate the MCP by including 50 to 100 percent of points
#var.per <- seq(50, 100, by = 5)
#hrs <- mcp.area(res, percent = var.per)
musky$MCP95 <- musky.mcp$area
musky$MCP95ID <- musky.mcp$id
musky
tag <- read.csv('MuskyTaggingData.csv')
dat <- merge(tag,musky, by = "Radio.Tag")
datc <- dat[-c(3,36),]
datc$Rel..Site <- as.factor(datc$Rel..Site)
fit1 <- glm(MCP95 ~ TL..mm., data = datc , family= Gamma)
fit2 <- glm(MCP95 ~ TL..mm + Sex, data = datc , family= Gamma)
fit1 <- glm(MCP95 ~ TL..mm., data = datc , family= Gamma)
fit2 <- glm(MCP95 ~ TL..mm. + Sex, data = datc , family= Gamma)
fit3 <- glm(MCP95 ~ Cap..Site, data = datc , family= Gamma)
fit4 <- glm(MCP95 ~ TL..mm.+ Rel..Site, data = datc , family= Gamma)
fit5 <- glm(MCP95 ~ TL..mm.+ Rel..Site + Sex, data = datc , family= Gamma)
equatiomatic::extract_eq(fit1)
equatiomatic::extract_eq(fit2)
equatiomatic::extract_eq(fit3, wrap = TRUE)
equatiomatic::extract_eq(fit4, wrap = TRUE)
equatiomatic::extract_eq(fit5, wrap = TRUE)
# model selection AIC for Gamma
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
mods
fit1 <- glm(MCP95 ~ TL..mm., data = datc , family= Gamma)
fit2 <- glm(MCP95 ~ TL..mm. + Sex, data = datc , family= Gamma)
fit3 <- glm(MCP95 ~ Cap..Site, data = datc , family= Gamma)
fit4 <- glm(MCP95 ~ TL..mm.+ Rel..Site, data = datc , family= Gamma)
fit5 <- glm(MCP95 ~ TL..mm.+ Rel..Site + Sex, data = datc , family= Gamma)
equatiomatic::extract_eq(fit1)
equatiomatic::extract_eq(fit2)
equatiomatic::extract_eq(fit3, wrap = TRUE)
equatiomatic::extract_eq(fit4, wrap = TRUE)
equatiomatic::extract_eq(fit5, wrap = TRUE)
summary(fit2)
summary(fit5)
unique(MCP95$Rel..Site)
datc$Rel..Site
unique(datc$Rel..Site)
knitr::opts_chunk$set(echo = TRUE)
library(equatiomatic)
library(adehabitatHR)
library("tidyverse")
#install.packages("AICcmodavg")
library(AICcmodavg)
library(multcomp)
# loading data
dat <- read.csv("CompletedatawWQ.csv")
hr <- dat[c("Radio.Tag",'lat', 'lon')]
hr <- hr[!is.na(hr$lat) & !is.na(hr$lon),]
coordinates(hr) <- c('lat','lon')
# The sample data are lat long from WGS 84
proj4string(hr) <- CRS( "EPSG:4326" )
# converting to utm from lat lon
res <- spTransform(hr, CRS("+proj=utm +zone=17N ellps=WGS84"))
musky <- data.frame(
"Radio.Tag" = unique(dat$Radio.Tag))
head(musky)
# using MCP instead of KDE
# MCP
musky.mcp <- mcp(res, percent = 95)
fit5
fit4
x <- matrix(c(0, 0, -1, 1,0,0,0), nrow = 1)# LSC B vs Jacksonville
cntr <- glht(model = fit, linfct = x)
x <- matrix(c(0, 0, -1, 1,0,0,0), nrow = 1)# LSC B vs Jacksonville
cntr <- glht(model = fit4, linfct = x)
cntr
# model selection AIC for lm
fit1 <- lm(MCP95 ~ TL..mm., data = datc )
fit2 <- lm(MCP95 ~ Sex, data = datc )
fit3 <- lm(MCP95 ~ Cap..Site, data = datc )
fit4 <- lm(MCP95 ~ TL..mm.+ Cap..Site, data = datc )
fit5 <- lm(MCP95 ~ TL..mm.+ Cap..Site+ Sex, data = datc)
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
head(mods)
fit4
betas <- coef(fit3)
betas
betas[1] + betas[2]
betas[1] + betas[3] # LSC Home Range in ha
betas[1] + betas[4] #  Jack Home Range in ha
betas[1] + betas[5] #  State Park Home Range in ha
betas[1] + betas[6] # Vandalia Home Range in ha
fit3
fit1 <- lm(MCP95 ~ TL..mm., data = datc )
fit2 <- lm(MCP95 ~ Sex, data = datc )
fit3 <- lm(MCP95 ~ Cap..Site, data = datc )
fit4 <- lm(MCP95 ~ TL..mm.+ Cap..Site, data = datc )
fit5 <- lm(MCP95 ~ TL..mm.+ Cap..Site+ Sex, data = datc)
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
head(mods)
plot(datc$MCP95)
fit1 <- glm(MCP95 ~ TL..mm., data = datc , family= Gamma)
fit2 <- glm(MCP95 ~ Sex, data = datc , family= Gamma)
fit3 <- glm(MCP95 ~ Cap..Site, data = datc , family= Gamma)
fit4 <- glm(MCP95 ~ TL..mm.+ Cap..Site, data = datc , family= Gamma)
fit5 <- glm(MCP95 ~ TL..mm.+ Cap..Site + Sex, data = datc , family= Gamma)
cand.set <- list(
P1 = fit1,
P2 = fit3,
P3 = fit5,
P4 = fit6
)
#install.packages("AICcmodavg")
library(AICcmodavg)
mods <- aictab(cand.set = cand.set, second.ord = F)
head(mods)
fit1 <- glm(MCP95 ~ TL..mm., data = datc , family= Gamma)
fit2 <- glm(MCP95 ~ Sex, data = datc , family= Gamma)
fit3 <- glm(MCP95 ~ Cap..Site, data = datc , family= Gamma)
fit4 <- glm(MCP95 ~ TL..mm.+ Cap..Site, data = datc , family= Gamma)
fit5 <- glm(MCP95 ~ TL..mm.+ Cap..Site + Sex, data = datc , family= Gamma)
cand.set <- list(
P1 = fit1,
P2 = fit3,
P3 = fit5,
P4 = fit6
)
#install.packages("AICcmodavg")
library(AICcmodavg)
mods <- aictab(cand.set = cand.set, second.ord = F)
head(mods)
# model selection AIC for lm
fit1 <- lm(MCP95 ~ TL..mm., data = datc )
fit2 <- lm(MCP95 ~ Sex, data = datc )
fit3 <- lm(MCP95 ~ Cap..Site, data = datc )
fit4 <- lm(MCP95 ~ TL..mm.+ Cap..Site, data = datc )
fit5 <- lm(MCP95 ~ TL..mm.+ Cap..Site+ Sex, data = datc)
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
head(mods)
fit1 <- glm(MCP95 ~ TL..mm., data = datc , family= Gamma)
fit2 <- glm(MCP95 ~ Sex, data = datc , family= Gamma)
fit3 <- glm(MCP95 ~ Cap..Site, data = datc , family= Gamma)
fit4 <- glm(MCP95 ~ TL..mm.+ Cap..Site, data = datc , family= Gamma)
fit5 <- glm(MCP95 ~ TL..mm.+ Cap..Site + Sex, data = datc , family= Gamma)
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
#install.packages("AICcmodavg")
library(AICcmodavg)
mods <- aictab(cand.set = cand.set, second.ord = F)
head(mods)
fit1 <- lm(MCP95 ~ TL..mm., data = datc )
fit2 <- lm(MCP95 ~ Sex, data = datc )
fit3 <- lm(MCP95 ~ Cap..Site, data = datc )
fit4 <- lm(MCP95 ~ TL..mm.+ Cap..Site, data = datc )
fit5 <- lm(MCP95 ~ TL..mm.+ Cap..Site+ Sex, data = datc)
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
head(mods)
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",
xlab="Capture Site", ylab="Home Range MCP ha")
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",notch=TRUE,
xlab="Capture Site", ylab="Home Range MCP ha")
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",notch=TRUE,
xlab="Capture Site", ylab="Home Range MCP ha")
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",
xlab="Capture Site", ylab="Home Range MCP ha")
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",las = 2,
xlab="Capture Site", ylab="Home Range MCP ha")
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",las = 2,
ylab="Home Range MCP ha")
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",las = 2,
ylab="Home Range MCP ha")
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",las = 2,
xlab="", ylab="Home Range MCP ha")
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",par(mar = c(12, 5, 4, 2)+ 0.1), las = 2,
xlab="", ylab="Home Range MCP ha")
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",par(mar = c(8, 5, 4, 2)+ 0.1), las = 2,
xlab="", ylab="Home Range MCP ha")
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",par(mar = c(7, 5, 4, 2)+ 0.1), las = 2,
xlab="", ylab="Home Range MCP ha")
boxplot(MCP95~ Cap..Site, data=datc, main="MCP",par(mar = c(8, 5, 4, 2)+ 0.1), las = 2,
xlab="", ylab="Home Range MCP ha")
knitr::opts_chunk$set(echo = TRUE)
library(equatiomatic)
library(adehabitatHR)
library("tidyverse")
#install.packages("AICcmodavg")
library(AICcmodavg)
library(multcomp)
# loading data
dat <- read.csv("CompletedatawWQ.csv")
hr <- dat[c("Radio.Tag",'lat', 'lon')]
hr <- hr[!is.na(hr$lat) & !is.na(hr$lon),]
coordinates(hr) <- c('lat','lon')
# The sample data are lat long from WGS 84
proj4string(hr) <- CRS( "EPSG:4326" )
# converting to utm from lat lon
res <- spTransform(hr, CRS("+proj=utm +zone=17N ellps=WGS84"))
musky <- data.frame(
"Radio.Tag" = unique(dat$Radio.Tag))
head(musky)
# using MCP instead of KDE
# MCP
musky.mcp <- mcp(res, percent = 95)
View(datc)
datc
boxplot(MCP95~ Recaptured..summer.angling., data=datc, main="MCP",
xlab="Capture Site", ylab="Home Range MCP ha")
library(equatiomatic)
library(adehabitatHR)
library("tidyverse")
#install.packages("AICcmodavg")
library(AICcmodavg)
library(multcomp)
# loading data
dat <- read.csv("CompletedatawWQ.csv")
hr <- dat[c("Radio.Tag",'lat', 'lon')]
hr <- hr[!is.na(hr$lat) & !is.na(hr$lon),]
coordinates(hr) <- c('lat','lon')
# The sample data are lat long from WGS 84
proj4string(hr) <- CRS( "EPSG:4326" )
# converting to utm from lat lon
res <- spTransform(hr, CRS("+proj=utm +zone=17N ellps=WGS84"))
musky <- data.frame(
"Radio.Tag" = unique(dat$Radio.Tag))
head(musky)
# using MCP instead of KDE
# MCP
musky.mcp <- mcp(res, percent = 95)
# using MCP instead of KDE
# MCP
musky.mcp <- adehabitatHR::mcp(res, percent = 95)
knitr::opts_chunk$set(echo = TRUE)
library(equatiomatic)
library(adehabitatHR)
library("tidyverse")
#install.packages("AICcmodavg")
library(AICcmodavg)
library(multcomp)
library(knitr)
# loading data
dat <- read.csv("CompletedatawWQ.csv")
hr <- dat[c("Radio.Tag",'lat', 'lon')]
hr <- hr[!is.na(hr$lat) & !is.na(hr$lon),]
coordinates(hr) <- c('lat','lon')
# The sample data are lat long from WGS 84
proj4string(hr) <- CRS( "EPSG:4326" )
# converting to utm from lat lon
res <- spTransform(hr, CRS("+proj=utm +zone=17N ellps=WGS84"))
musky <- data.frame(
"Radio.Tag" = unique(dat$Radio.Tag))
head(musky)
# using MCP instead of KDE
# MCP
musky.mcp <- adehabitatHR::mcp(res, percent = 95)
musky$MCP95 <- musky.mcp$area
musky$MCP95ID <- musky.mcp$id
musky
tag <- read.csv('MuskyTaggingData.csv')
dat <- merge(tag,musky, by = "Radio.Tag")
datc <- dat[-c(3,36),]
datc$Rel..Site <- as.factor(datc$Rel..Site)
# model selection AIC for Gamma
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
kable(mods)
# model selection AIC for Gamma
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
kable(mods)
mods
str(mods)
# model selection AIC for Gamma
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
df <- replace(mods$Modnames, 1:5, c('TL', 'TL +Sex' , 'Release Site' , "TL + Release Site", "TL + Release Site + Sex" ))
kable(mods)
df
mods[1:5,]
mods[,1]
# model selection AIC for Gamma
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
df <- replace(mods, mods[,1], c('TL', 'TL +Sex' , 'Release Site' , "TL + Release Site", "TL + Release Site + Sex" ))
kable(df)
df
# model selection AIC for Gamma
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
mods[,1] <-  c('TL', 'TL +Sex' , 'Release Site' , "TL + Release Site", "TL + Release Site + Sex" )
kable(df)
# model selection AIC for Gamma
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
mods[,1] <-  c('TL', 'TL +Sex' , 'Release Site' , "TL + Release Site", "TL + Release Site + Sex" )
kable(df)
# model selection AIC for Gamma
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
mods[,1] <-  c('TL', 'TL +Sex' , 'Release Site' , "TL + Release Site", "TL + Release Site + Sex" )
kable(mods)
mods
kable(mods, digits = 2)
kable(mods, digits = 2, row.names = NULL)
kable(mods, digits = 2, row.names = rownames(x))
kable(mods, digits = 2)
# model selection AIC for Gamma
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
mods[,1] <-  c('TL', 'TL +Sex' , 'Release Site' , "TL + Release Site", "TL + Release Site + Sex" )
mods %>%
rename(
Modnames = Model
)
# model selection AIC for Gamma
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
mods[,1] <-  c('TL', 'TL +Sex' , 'Release Site' , "TL + Release Site", "TL + Release Site + Sex" )
mods %>%
rename(
Model = Modnames
)
kable(mods, digits = 2)
# model selection AIC for Gamma
cand.set <- list(
P1 = fit1,
P2 = fit2,
P3 = fit3,
P4 = fit4,
P5 = fit5
)
mods <- aictab(cand.set = cand.set, second.ord = F)
mods[,1] <-  c('TL', 'TL +Sex' , 'Release Site' , "TL + Release Site", "TL + Release Site + Sex" )
mods %>%
rename(
Model = Modnames
)
kable(mods, digits = 2)
mods
boxplot(MCP95~ Cap..Site, data=datc,par(mar = c(9, 5, 4, 2)+ 0.1), las = 2,
xlab="", ylab="MCP Home Range (ha)")
datc
unique(datc$Rel..Site)
datc$Cap..Site <-  c('Jacksonville', "Vandalia", "State Park" , "Little Skin Creek", "Mary Conrad Park", "Hog Hollow" )
boxplot(MCP95~ Rel..Site, data=datc,par(mar = c(9, 5, 4, 2)+ 0.1), las = 2, xlab="", ylab="MCP Home Range (ha)")
boxplot(MCP95~ Rel..Site, data=datc,par(mar = c(12, 5, 4, 2)+ 0.1), las = 2, xlab="", ylab="MCP Home Range (ha)")
datc[Rel..Site == "
little skin creek bridge "] = "Little Skin Creek Bridge "
datc[Rel..Site. == "
little skin creek bridge "] = "Little Skin Creek Bridge "
datc
datc[Rel..Site. == "little skin creek bridge "] = "Little Skin Creek Bridge"
datc$Rel..Site[datc$Rel..Site. == "little skin creek bridge "] = "Little Skin Creek Bridge"
boxplot(MCP95~ Rel..Site, data=datc,par(mar = c(12, 5, 4, 2)+ 0.1), las = 2, xlab="", ylab="MCP Home Range (ha)")
datc$Rel..Site[datc$Rel..Site == "little skin creek bridge "] = "Little Skin Creek Bridge"
boxplot(MCP95~ Rel..Site, data=datc,par(mar = c(12, 5, 4, 2)+ 0.1), las = 2, xlab="", ylab="MCP Home Range (ha)")
datc$Rel..Site[datc$Rel..Site == "little skin creek bridge"] = "Little Skin Creek Bridge"
boxplot(MCP95~ Rel..Site, data=datc,par(mar = c(12, 5, 4, 2)+ 0.1), las = 2, xlab="", ylab="MCP Home Range (ha)")
datc$Rel..Site == "little skin creek bridge"]
datc$Rel..Site == "little skin creek bridge"
datc$Rel..Site[datc$Rel..Site == "little skin creek bridge"]
knitr::opts_chunk$set(echo = TRUE)
library(equatiomatic)
library(adehabitatHR)
library("tidyverse")
#install.packages("AICcmodavg")
library(AICcmodavg)
library(multcomp)
library(knitr)
# install.packages("citr")
devtools::install_github("crsh/citr")
knitr::opts_chunk$set(echo = TRUE)
library(equatiomatic)
library(adehabitatHR)
library("tidyverse")
#install.packages("AICcmodavg")
library(AICcmodavg)
library(multcomp)
library(knitr)
# install.packages("citr")
devtools::install_github("crsh/citr")
knitr::opts_chunk$set(echo = TRUE)
library(equatiomatic)
library(adehabitatHR)
library("tidyverse")
#install.packages("AICcmodavg")
library(AICcmodavg)
library(multcomp)
library(knitr)
# install.packages("citr")
library(devtools)
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
library(equatiomatic)
library(adehabitatHR)
library("tidyverse")
#install.packages("AICcmodavg")
library(AICcmodavg)
library(multcomp)
library(knitr)
# install.packages("citr")
library(devtools)
install.packages("tidyverse")
install.packages(c("arkdb", "backports", "BH", "broom", "cachem", "clipr", "colorspace", "cpp11", "crayon", "DBI", "dbplyr", "deldir", "diffobj", "digest", "dplyr", "e1071", "fansi", "farver", "forcats", "furrr", "future", "generics", "globals", "hms", "htmltools", "isoband", "jtools", "knitr", "ks", "labeling", "lubridate", "lwgeom", "magrittr", "maptools", "mime", "parallelly", "pillar", "pkgload", "ps", "R6", "raster", "Rcpp", "readr", "reprex", "rfishbase", "rlang", "rmarkdown", "rprojroot", "RSQLite", "rvest", "sp", "tibble", "tidyr", "tinytex", "TMB", "tweenr", "units", "utf8", "vctrs", "xfun"))
install.packages(c("broom", "dbplyr", "deldir", "digest", "htmltools", "pkgload", "rfishbase", "rlang", "sp", "TMB", "vctrs", "xfun"))
install.packages("rlang")
remove.packages("rlang", lib="~/R/win-library/4.0")
install.packages("rlang")
install.packages(c("broom", "dbplyr", "pkgload", "rfishbase", "sp", "TMB"))
